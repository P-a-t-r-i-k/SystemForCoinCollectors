@using SystemForCoinCollectors.Data
@using SystemForCoinCollectors.Services

@inject ICoinService CoinService
@inject NavigationManager NavigationManager

@attribute [StreamRendering(true)]
@* @rendermode @(new InteractiveServerRenderMode(false)) *@

@page "/coin-list"
<h3>CoinList</h3>

@if (coins == null)
{
    <span>Loading...</span>
}
else if (coins.Count == 0)
{
    <span>No coins were found.</span>
}
else
{
    <ul>
        @foreach (var coin in coins)
        {
            string removeString = "wwwroot/";
            string imgPath = coin.Image;
            int length = removeString.Length;

            @if (imgPath.Contains(removeString))
            {
                imgPath = coin.Image.Substring(length - 1);
            }

            <li>@coin.Feature</li>
            <img class="unobtained" width="200" height="200" src="@imgPath">
        }
    </ul>
}

<CreateCoinButton></CreateCoinButton>

@code {
    List<Coin>? coins = null;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);

        coins = await CoinService.GetAllCoins();
    }
}
