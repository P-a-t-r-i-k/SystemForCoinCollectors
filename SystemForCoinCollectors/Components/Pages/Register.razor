@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Azure.Identity
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.EntityFrameworkCore
@using SystemForCoinCollectors.Components.Account
@using SystemForCoinCollectors.Data

@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Mvc.RazorPages
@using System.ComponentModel.DataAnnotations
@using System.Runtime.InteropServices.JavaScript

@page "/register"

<PageTitle>Register</PageTitle>

<EditForm method="post" Model="UserM" OnValidSubmit="RegisterUser" FormName="register" Enhance>
    <DataAnnotationsValidator />

    <div class="wrapper">
        <h1>Register</h1>
        <div class="input-box">
            <InputText @bind-Value="UserM.UserName" placeholder="Username" class="register-input"/>
            <i class="bi bi-person-fill"></i>
            <ValidationMessage For="() => UserM.UserName" class="text-danger"/>
        </div>

        <div class="input-box">
            <InputText @bind-Value="UserM.Email" placeholder="E-mail" class="register-input" />
            <i class="bi bi-at"></i>
            <ValidationMessage For="() => UserM.Email" class="text-danger"/>
        </div>

        <div class="input-box">
            <InputText @bind-Value="UserM.Password" type="password" placeholder="Password" class="register-input" />
            <i class="bi bi-lock-fill"></i>
            <ValidationMessage For="() => UserM.Password" class="text-danger"/>
        </div>
        
        <div class="input-box">
            <InputText @bind-Value="UserM.RepeatPassword" type="password" placeholder="Username" class="register-input" />
            <i class="bi bi-lock-fill"></i>
            <ValidationMessage For="() => UserM.RepeatPassword" class="text-danger"/>
        </div>
       
        <button type="submit">Register</button>
        <div class="login-link">
            <p>Already have an account? <a href="login">Login</a></p>
        </div>
    </div>
</EditForm>

@inject Data.ApplicationDbContext appDbContext
@code {
    [SupplyParameterFromForm]
    public UserModel UserM { get; set; } = new();

    public class UserModel
    {
        [Required(ErrorMessage = "Username is required!")]
        public string UserName { get; set; } = "";
        
        [Required(ErrorMessage = "E-mail is required!")]
        [EmailAddress(ErrorMessage = "Invalid e-mail address!")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "Password is required!")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "You have to repeat password here!")]
        [DataType(DataType.Password)]
        [Compare(nameof(Password), ErrorMessage = "Passwords do not match!")]
        public string RepeatPassword { get; set; } = "";
    }

    public async Task RegisterUser(EditContext editContext)
    {
        ApplicationUser appUser = new()
        {
            UserName = UserM.UserName,
            Email = UserM.Email,
            EmailConfirmed = true,
        };
        appDbContext.Users.Add(appUser);
        await appDbContext.SaveChangesAsync();
    }

}
